using System;

namespace 상속성
{
    //OOP의 특성(은닉성/ 상속성 / 다형성)

    class Player//상속해주는 상위 계층 : 부모 클래스 or 기반 클래스
    {
        static public int a;
        public int hp;
        public int attack;
        //생성자 호출 시 부모 클래스 먼저 호출 후 자식 클래스 호출

        public void Move()
        {
            Console.WriteLine("Knight Move");
        }

        public void Attack()
        {
            Console.WriteLine("Knight Attack");
        }



    }

    class Mage : Player //-->위에 설정을 그대로 상속받는다.
    {

    }

    class Archer : Player//상속받는 하위 계층 : 자식 클래스 or 파생 클래스
    {

    }
   
    class Knight : Player
    {
        //this. 문법과 쓰임새가 유사한 base도 사용-->부모 클래스에 있는 생성자를 자식 클래스에서 base.hp=100 등의 형태로 사용 가능


     


    }


    class Program
    {

        static void Main(string[] args)
        {

            Knight knight = new Knight();
            knight.Move//부모에게 있던 함수도 이용 가능
       
    

        }
    }
}
